// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: types.proto

package com.github.jtendermint.jabci.types;

/**
 * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseEndBlock}
 */
public  final class ResponseEndBlock extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseEndBlock)
    ResponseEndBlockOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ResponseEndBlock.newBuilder() to construct.
  private ResponseEndBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ResponseEndBlock() {
    validatorUpdates_ = java.util.Collections.emptyList();
    events_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ResponseEndBlock(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              validatorUpdates_ = new java.util.ArrayList<com.github.jtendermint.jabci.types.ValidatorUpdate>();
              mutable_bitField0_ |= 0x00000001;
            }
            validatorUpdates_.add(
                input.readMessage(com.github.jtendermint.jabci.types.ValidatorUpdate.parser(), extensionRegistry));
            break;
          }
          case 18: {
            com.github.jtendermint.jabci.types.ConsensusParams.Builder subBuilder = null;
            if (consensusParamUpdates_ != null) {
              subBuilder = consensusParamUpdates_.toBuilder();
            }
            consensusParamUpdates_ = input.readMessage(com.github.jtendermint.jabci.types.ConsensusParams.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(consensusParamUpdates_);
              consensusParamUpdates_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              events_ = new java.util.ArrayList<com.github.jtendermint.jabci.types.Event>();
              mutable_bitField0_ |= 0x00000004;
            }
            events_.add(
                input.readMessage(com.github.jtendermint.jabci.types.Event.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        validatorUpdates_ = java.util.Collections.unmodifiableList(validatorUpdates_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        events_ = java.util.Collections.unmodifiableList(events_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.jtendermint.jabci.types.ResponseEndBlock.class, com.github.jtendermint.jabci.types.ResponseEndBlock.Builder.class);
  }

  private int bitField0_;
  public static final int VALIDATOR_UPDATES_FIELD_NUMBER = 1;
  private java.util.List<com.github.jtendermint.jabci.types.ValidatorUpdate> validatorUpdates_;
  /**
   * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
   */
  public java.util.List<com.github.jtendermint.jabci.types.ValidatorUpdate> getValidatorUpdatesList() {
    return validatorUpdates_;
  }
  /**
   * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
   */
  public java.util.List<? extends com.github.jtendermint.jabci.types.ValidatorUpdateOrBuilder> 
      getValidatorUpdatesOrBuilderList() {
    return validatorUpdates_;
  }
  /**
   * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
   */
  public int getValidatorUpdatesCount() {
    return validatorUpdates_.size();
  }
  /**
   * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
   */
  public com.github.jtendermint.jabci.types.ValidatorUpdate getValidatorUpdates(int index) {
    return validatorUpdates_.get(index);
  }
  /**
   * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
   */
  public com.github.jtendermint.jabci.types.ValidatorUpdateOrBuilder getValidatorUpdatesOrBuilder(
      int index) {
    return validatorUpdates_.get(index);
  }

  public static final int CONSENSUS_PARAM_UPDATES_FIELD_NUMBER = 2;
  private com.github.jtendermint.jabci.types.ConsensusParams consensusParamUpdates_;
  /**
   * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
   */
  public boolean hasConsensusParamUpdates() {
    return consensusParamUpdates_ != null;
  }
  /**
   * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
   */
  public com.github.jtendermint.jabci.types.ConsensusParams getConsensusParamUpdates() {
    return consensusParamUpdates_ == null ? com.github.jtendermint.jabci.types.ConsensusParams.getDefaultInstance() : consensusParamUpdates_;
  }
  /**
   * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
   */
  public com.github.jtendermint.jabci.types.ConsensusParamsOrBuilder getConsensusParamUpdatesOrBuilder() {
    return getConsensusParamUpdates();
  }

  public static final int EVENTS_FIELD_NUMBER = 3;
  private java.util.List<com.github.jtendermint.jabci.types.Event> events_;
  /**
   * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
   */
  public java.util.List<com.github.jtendermint.jabci.types.Event> getEventsList() {
    return events_;
  }
  /**
   * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
   */
  public java.util.List<? extends com.github.jtendermint.jabci.types.EventOrBuilder> 
      getEventsOrBuilderList() {
    return events_;
  }
  /**
   * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
   */
  public int getEventsCount() {
    return events_.size();
  }
  /**
   * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
   */
  public com.github.jtendermint.jabci.types.Event getEvents(int index) {
    return events_.get(index);
  }
  /**
   * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
   */
  public com.github.jtendermint.jabci.types.EventOrBuilder getEventsOrBuilder(
      int index) {
    return events_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < validatorUpdates_.size(); i++) {
      output.writeMessage(1, validatorUpdates_.get(i));
    }
    if (consensusParamUpdates_ != null) {
      output.writeMessage(2, getConsensusParamUpdates());
    }
    for (int i = 0; i < events_.size(); i++) {
      output.writeMessage(3, events_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < validatorUpdates_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, validatorUpdates_.get(i));
    }
    if (consensusParamUpdates_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getConsensusParamUpdates());
    }
    for (int i = 0; i < events_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, events_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.jtendermint.jabci.types.ResponseEndBlock)) {
      return super.equals(obj);
    }
    com.github.jtendermint.jabci.types.ResponseEndBlock other = (com.github.jtendermint.jabci.types.ResponseEndBlock) obj;

    if (!getValidatorUpdatesList()
        .equals(other.getValidatorUpdatesList())) return false;
    if (hasConsensusParamUpdates() != other.hasConsensusParamUpdates()) return false;
    if (hasConsensusParamUpdates()) {
      if (!getConsensusParamUpdates()
          .equals(other.getConsensusParamUpdates())) return false;
    }
    if (!getEventsList()
        .equals(other.getEventsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getValidatorUpdatesCount() > 0) {
      hash = (37 * hash) + VALIDATOR_UPDATES_FIELD_NUMBER;
      hash = (53 * hash) + getValidatorUpdatesList().hashCode();
    }
    if (hasConsensusParamUpdates()) {
      hash = (37 * hash) + CONSENSUS_PARAM_UPDATES_FIELD_NUMBER;
      hash = (53 * hash) + getConsensusParamUpdates().hashCode();
    }
    if (getEventsCount() > 0) {
      hash = (37 * hash) + EVENTS_FIELD_NUMBER;
      hash = (53 * hash) + getEventsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.jtendermint.jabci.types.ResponseEndBlock parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.jtendermint.jabci.types.ResponseEndBlock prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseEndBlock}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseEndBlock)
      com.github.jtendermint.jabci.types.ResponseEndBlockOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.ResponseEndBlock.class, com.github.jtendermint.jabci.types.ResponseEndBlock.Builder.class);
    }

    // Construct using com.github.jtendermint.jabci.types.ResponseEndBlock.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getValidatorUpdatesFieldBuilder();
        getEventsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (validatorUpdatesBuilder_ == null) {
        validatorUpdates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        validatorUpdatesBuilder_.clear();
      }
      if (consensusParamUpdatesBuilder_ == null) {
        consensusParamUpdates_ = null;
      } else {
        consensusParamUpdates_ = null;
        consensusParamUpdatesBuilder_ = null;
      }
      if (eventsBuilder_ == null) {
        events_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        eventsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_descriptor;
    }

    @java.lang.Override
    public com.github.jtendermint.jabci.types.ResponseEndBlock getDefaultInstanceForType() {
      return com.github.jtendermint.jabci.types.ResponseEndBlock.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.jtendermint.jabci.types.ResponseEndBlock build() {
      com.github.jtendermint.jabci.types.ResponseEndBlock result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.jtendermint.jabci.types.ResponseEndBlock buildPartial() {
      com.github.jtendermint.jabci.types.ResponseEndBlock result = new com.github.jtendermint.jabci.types.ResponseEndBlock(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (validatorUpdatesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          validatorUpdates_ = java.util.Collections.unmodifiableList(validatorUpdates_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.validatorUpdates_ = validatorUpdates_;
      } else {
        result.validatorUpdates_ = validatorUpdatesBuilder_.build();
      }
      if (consensusParamUpdatesBuilder_ == null) {
        result.consensusParamUpdates_ = consensusParamUpdates_;
      } else {
        result.consensusParamUpdates_ = consensusParamUpdatesBuilder_.build();
      }
      if (eventsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          events_ = java.util.Collections.unmodifiableList(events_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.events_ = events_;
      } else {
        result.events_ = eventsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.jtendermint.jabci.types.ResponseEndBlock) {
        return mergeFrom((com.github.jtendermint.jabci.types.ResponseEndBlock)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.jtendermint.jabci.types.ResponseEndBlock other) {
      if (other == com.github.jtendermint.jabci.types.ResponseEndBlock.getDefaultInstance()) return this;
      if (validatorUpdatesBuilder_ == null) {
        if (!other.validatorUpdates_.isEmpty()) {
          if (validatorUpdates_.isEmpty()) {
            validatorUpdates_ = other.validatorUpdates_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValidatorUpdatesIsMutable();
            validatorUpdates_.addAll(other.validatorUpdates_);
          }
          onChanged();
        }
      } else {
        if (!other.validatorUpdates_.isEmpty()) {
          if (validatorUpdatesBuilder_.isEmpty()) {
            validatorUpdatesBuilder_.dispose();
            validatorUpdatesBuilder_ = null;
            validatorUpdates_ = other.validatorUpdates_;
            bitField0_ = (bitField0_ & ~0x00000001);
            validatorUpdatesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getValidatorUpdatesFieldBuilder() : null;
          } else {
            validatorUpdatesBuilder_.addAllMessages(other.validatorUpdates_);
          }
        }
      }
      if (other.hasConsensusParamUpdates()) {
        mergeConsensusParamUpdates(other.getConsensusParamUpdates());
      }
      if (eventsBuilder_ == null) {
        if (!other.events_.isEmpty()) {
          if (events_.isEmpty()) {
            events_ = other.events_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEventsIsMutable();
            events_.addAll(other.events_);
          }
          onChanged();
        }
      } else {
        if (!other.events_.isEmpty()) {
          if (eventsBuilder_.isEmpty()) {
            eventsBuilder_.dispose();
            eventsBuilder_ = null;
            events_ = other.events_;
            bitField0_ = (bitField0_ & ~0x00000004);
            eventsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEventsFieldBuilder() : null;
          } else {
            eventsBuilder_.addAllMessages(other.events_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.jtendermint.jabci.types.ResponseEndBlock parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.jtendermint.jabci.types.ResponseEndBlock) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.github.jtendermint.jabci.types.ValidatorUpdate> validatorUpdates_ =
      java.util.Collections.emptyList();
    private void ensureValidatorUpdatesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        validatorUpdates_ = new java.util.ArrayList<com.github.jtendermint.jabci.types.ValidatorUpdate>(validatorUpdates_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.jtendermint.jabci.types.ValidatorUpdate, com.github.jtendermint.jabci.types.ValidatorUpdate.Builder, com.github.jtendermint.jabci.types.ValidatorUpdateOrBuilder> validatorUpdatesBuilder_;

    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public java.util.List<com.github.jtendermint.jabci.types.ValidatorUpdate> getValidatorUpdatesList() {
      if (validatorUpdatesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(validatorUpdates_);
      } else {
        return validatorUpdatesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public int getValidatorUpdatesCount() {
      if (validatorUpdatesBuilder_ == null) {
        return validatorUpdates_.size();
      } else {
        return validatorUpdatesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public com.github.jtendermint.jabci.types.ValidatorUpdate getValidatorUpdates(int index) {
      if (validatorUpdatesBuilder_ == null) {
        return validatorUpdates_.get(index);
      } else {
        return validatorUpdatesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public Builder setValidatorUpdates(
        int index, com.github.jtendermint.jabci.types.ValidatorUpdate value) {
      if (validatorUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValidatorUpdatesIsMutable();
        validatorUpdates_.set(index, value);
        onChanged();
      } else {
        validatorUpdatesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public Builder setValidatorUpdates(
        int index, com.github.jtendermint.jabci.types.ValidatorUpdate.Builder builderForValue) {
      if (validatorUpdatesBuilder_ == null) {
        ensureValidatorUpdatesIsMutable();
        validatorUpdates_.set(index, builderForValue.build());
        onChanged();
      } else {
        validatorUpdatesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public Builder addValidatorUpdates(com.github.jtendermint.jabci.types.ValidatorUpdate value) {
      if (validatorUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValidatorUpdatesIsMutable();
        validatorUpdates_.add(value);
        onChanged();
      } else {
        validatorUpdatesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public Builder addValidatorUpdates(
        int index, com.github.jtendermint.jabci.types.ValidatorUpdate value) {
      if (validatorUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValidatorUpdatesIsMutable();
        validatorUpdates_.add(index, value);
        onChanged();
      } else {
        validatorUpdatesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public Builder addValidatorUpdates(
        com.github.jtendermint.jabci.types.ValidatorUpdate.Builder builderForValue) {
      if (validatorUpdatesBuilder_ == null) {
        ensureValidatorUpdatesIsMutable();
        validatorUpdates_.add(builderForValue.build());
        onChanged();
      } else {
        validatorUpdatesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public Builder addValidatorUpdates(
        int index, com.github.jtendermint.jabci.types.ValidatorUpdate.Builder builderForValue) {
      if (validatorUpdatesBuilder_ == null) {
        ensureValidatorUpdatesIsMutable();
        validatorUpdates_.add(index, builderForValue.build());
        onChanged();
      } else {
        validatorUpdatesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public Builder addAllValidatorUpdates(
        java.lang.Iterable<? extends com.github.jtendermint.jabci.types.ValidatorUpdate> values) {
      if (validatorUpdatesBuilder_ == null) {
        ensureValidatorUpdatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, validatorUpdates_);
        onChanged();
      } else {
        validatorUpdatesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public Builder clearValidatorUpdates() {
      if (validatorUpdatesBuilder_ == null) {
        validatorUpdates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        validatorUpdatesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public Builder removeValidatorUpdates(int index) {
      if (validatorUpdatesBuilder_ == null) {
        ensureValidatorUpdatesIsMutable();
        validatorUpdates_.remove(index);
        onChanged();
      } else {
        validatorUpdatesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public com.github.jtendermint.jabci.types.ValidatorUpdate.Builder getValidatorUpdatesBuilder(
        int index) {
      return getValidatorUpdatesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public com.github.jtendermint.jabci.types.ValidatorUpdateOrBuilder getValidatorUpdatesOrBuilder(
        int index) {
      if (validatorUpdatesBuilder_ == null) {
        return validatorUpdates_.get(index);  } else {
        return validatorUpdatesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public java.util.List<? extends com.github.jtendermint.jabci.types.ValidatorUpdateOrBuilder> 
         getValidatorUpdatesOrBuilderList() {
      if (validatorUpdatesBuilder_ != null) {
        return validatorUpdatesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(validatorUpdates_);
      }
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public com.github.jtendermint.jabci.types.ValidatorUpdate.Builder addValidatorUpdatesBuilder() {
      return getValidatorUpdatesFieldBuilder().addBuilder(
          com.github.jtendermint.jabci.types.ValidatorUpdate.getDefaultInstance());
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public com.github.jtendermint.jabci.types.ValidatorUpdate.Builder addValidatorUpdatesBuilder(
        int index) {
      return getValidatorUpdatesFieldBuilder().addBuilder(
          index, com.github.jtendermint.jabci.types.ValidatorUpdate.getDefaultInstance());
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.ValidatorUpdate validator_updates = 1;</code>
     */
    public java.util.List<com.github.jtendermint.jabci.types.ValidatorUpdate.Builder> 
         getValidatorUpdatesBuilderList() {
      return getValidatorUpdatesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.jtendermint.jabci.types.ValidatorUpdate, com.github.jtendermint.jabci.types.ValidatorUpdate.Builder, com.github.jtendermint.jabci.types.ValidatorUpdateOrBuilder> 
        getValidatorUpdatesFieldBuilder() {
      if (validatorUpdatesBuilder_ == null) {
        validatorUpdatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.jtendermint.jabci.types.ValidatorUpdate, com.github.jtendermint.jabci.types.ValidatorUpdate.Builder, com.github.jtendermint.jabci.types.ValidatorUpdateOrBuilder>(
                validatorUpdates_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        validatorUpdates_ = null;
      }
      return validatorUpdatesBuilder_;
    }

    private com.github.jtendermint.jabci.types.ConsensusParams consensusParamUpdates_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.jtendermint.jabci.types.ConsensusParams, com.github.jtendermint.jabci.types.ConsensusParams.Builder, com.github.jtendermint.jabci.types.ConsensusParamsOrBuilder> consensusParamUpdatesBuilder_;
    /**
     * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
     */
    public boolean hasConsensusParamUpdates() {
      return consensusParamUpdatesBuilder_ != null || consensusParamUpdates_ != null;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
     */
    public com.github.jtendermint.jabci.types.ConsensusParams getConsensusParamUpdates() {
      if (consensusParamUpdatesBuilder_ == null) {
        return consensusParamUpdates_ == null ? com.github.jtendermint.jabci.types.ConsensusParams.getDefaultInstance() : consensusParamUpdates_;
      } else {
        return consensusParamUpdatesBuilder_.getMessage();
      }
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
     */
    public Builder setConsensusParamUpdates(com.github.jtendermint.jabci.types.ConsensusParams value) {
      if (consensusParamUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        consensusParamUpdates_ = value;
        onChanged();
      } else {
        consensusParamUpdatesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
     */
    public Builder setConsensusParamUpdates(
        com.github.jtendermint.jabci.types.ConsensusParams.Builder builderForValue) {
      if (consensusParamUpdatesBuilder_ == null) {
        consensusParamUpdates_ = builderForValue.build();
        onChanged();
      } else {
        consensusParamUpdatesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
     */
    public Builder mergeConsensusParamUpdates(com.github.jtendermint.jabci.types.ConsensusParams value) {
      if (consensusParamUpdatesBuilder_ == null) {
        if (consensusParamUpdates_ != null) {
          consensusParamUpdates_ =
            com.github.jtendermint.jabci.types.ConsensusParams.newBuilder(consensusParamUpdates_).mergeFrom(value).buildPartial();
        } else {
          consensusParamUpdates_ = value;
        }
        onChanged();
      } else {
        consensusParamUpdatesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
     */
    public Builder clearConsensusParamUpdates() {
      if (consensusParamUpdatesBuilder_ == null) {
        consensusParamUpdates_ = null;
        onChanged();
      } else {
        consensusParamUpdates_ = null;
        consensusParamUpdatesBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
     */
    public com.github.jtendermint.jabci.types.ConsensusParams.Builder getConsensusParamUpdatesBuilder() {
      
      onChanged();
      return getConsensusParamUpdatesFieldBuilder().getBuilder();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
     */
    public com.github.jtendermint.jabci.types.ConsensusParamsOrBuilder getConsensusParamUpdatesOrBuilder() {
      if (consensusParamUpdatesBuilder_ != null) {
        return consensusParamUpdatesBuilder_.getMessageOrBuilder();
      } else {
        return consensusParamUpdates_ == null ?
            com.github.jtendermint.jabci.types.ConsensusParams.getDefaultInstance() : consensusParamUpdates_;
      }
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ConsensusParams consensus_param_updates = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.jtendermint.jabci.types.ConsensusParams, com.github.jtendermint.jabci.types.ConsensusParams.Builder, com.github.jtendermint.jabci.types.ConsensusParamsOrBuilder> 
        getConsensusParamUpdatesFieldBuilder() {
      if (consensusParamUpdatesBuilder_ == null) {
        consensusParamUpdatesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.jtendermint.jabci.types.ConsensusParams, com.github.jtendermint.jabci.types.ConsensusParams.Builder, com.github.jtendermint.jabci.types.ConsensusParamsOrBuilder>(
                getConsensusParamUpdates(),
                getParentForChildren(),
                isClean());
        consensusParamUpdates_ = null;
      }
      return consensusParamUpdatesBuilder_;
    }

    private java.util.List<com.github.jtendermint.jabci.types.Event> events_ =
      java.util.Collections.emptyList();
    private void ensureEventsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        events_ = new java.util.ArrayList<com.github.jtendermint.jabci.types.Event>(events_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.jtendermint.jabci.types.Event, com.github.jtendermint.jabci.types.Event.Builder, com.github.jtendermint.jabci.types.EventOrBuilder> eventsBuilder_;

    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public java.util.List<com.github.jtendermint.jabci.types.Event> getEventsList() {
      if (eventsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(events_);
      } else {
        return eventsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public int getEventsCount() {
      if (eventsBuilder_ == null) {
        return events_.size();
      } else {
        return eventsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public com.github.jtendermint.jabci.types.Event getEvents(int index) {
      if (eventsBuilder_ == null) {
        return events_.get(index);
      } else {
        return eventsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public Builder setEvents(
        int index, com.github.jtendermint.jabci.types.Event value) {
      if (eventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventsIsMutable();
        events_.set(index, value);
        onChanged();
      } else {
        eventsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public Builder setEvents(
        int index, com.github.jtendermint.jabci.types.Event.Builder builderForValue) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.set(index, builderForValue.build());
        onChanged();
      } else {
        eventsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public Builder addEvents(com.github.jtendermint.jabci.types.Event value) {
      if (eventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventsIsMutable();
        events_.add(value);
        onChanged();
      } else {
        eventsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public Builder addEvents(
        int index, com.github.jtendermint.jabci.types.Event value) {
      if (eventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventsIsMutable();
        events_.add(index, value);
        onChanged();
      } else {
        eventsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public Builder addEvents(
        com.github.jtendermint.jabci.types.Event.Builder builderForValue) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.add(builderForValue.build());
        onChanged();
      } else {
        eventsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public Builder addEvents(
        int index, com.github.jtendermint.jabci.types.Event.Builder builderForValue) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.add(index, builderForValue.build());
        onChanged();
      } else {
        eventsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public Builder addAllEvents(
        java.lang.Iterable<? extends com.github.jtendermint.jabci.types.Event> values) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, events_);
        onChanged();
      } else {
        eventsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public Builder clearEvents() {
      if (eventsBuilder_ == null) {
        events_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        eventsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public Builder removeEvents(int index) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.remove(index);
        onChanged();
      } else {
        eventsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public com.github.jtendermint.jabci.types.Event.Builder getEventsBuilder(
        int index) {
      return getEventsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public com.github.jtendermint.jabci.types.EventOrBuilder getEventsOrBuilder(
        int index) {
      if (eventsBuilder_ == null) {
        return events_.get(index);  } else {
        return eventsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public java.util.List<? extends com.github.jtendermint.jabci.types.EventOrBuilder> 
         getEventsOrBuilderList() {
      if (eventsBuilder_ != null) {
        return eventsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(events_);
      }
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public com.github.jtendermint.jabci.types.Event.Builder addEventsBuilder() {
      return getEventsFieldBuilder().addBuilder(
          com.github.jtendermint.jabci.types.Event.getDefaultInstance());
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public com.github.jtendermint.jabci.types.Event.Builder addEventsBuilder(
        int index) {
      return getEventsFieldBuilder().addBuilder(
          index, com.github.jtendermint.jabci.types.Event.getDefaultInstance());
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Event events = 3;</code>
     */
    public java.util.List<com.github.jtendermint.jabci.types.Event.Builder> 
         getEventsBuilderList() {
      return getEventsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.jtendermint.jabci.types.Event, com.github.jtendermint.jabci.types.Event.Builder, com.github.jtendermint.jabci.types.EventOrBuilder> 
        getEventsFieldBuilder() {
      if (eventsBuilder_ == null) {
        eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.jtendermint.jabci.types.Event, com.github.jtendermint.jabci.types.Event.Builder, com.github.jtendermint.jabci.types.EventOrBuilder>(
                events_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        events_ = null;
      }
      return eventsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseEndBlock)
  }

  // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseEndBlock)
  private static final com.github.jtendermint.jabci.types.ResponseEndBlock DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.ResponseEndBlock();
  }

  public static com.github.jtendermint.jabci.types.ResponseEndBlock getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResponseEndBlock>
      PARSER = new com.google.protobuf.AbstractParser<ResponseEndBlock>() {
    @java.lang.Override
    public ResponseEndBlock parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ResponseEndBlock(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ResponseEndBlock> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResponseEndBlock> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.jtendermint.jabci.types.ResponseEndBlock getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

