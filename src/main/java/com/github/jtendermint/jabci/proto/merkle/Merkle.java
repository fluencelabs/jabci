// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: merkle.proto

package com.github.jtendermint.jabci.proto.merkle;

public final class Merkle {
  private Merkle() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_proto_merkle_ProofOp_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_proto_merkle_ProofOp_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_proto_merkle_Proof_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_proto_merkle_Proof_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014merkle.proto\022)com.github.jtendermint.j" +
      "abci.proto.merkle\"2\n\007ProofOp\022\014\n\004type\030\001 \001" +
      "(\t\022\013\n\003key\030\002 \001(\014\022\014\n\004data\030\003 \001(\014\"H\n\005Proof\022?" +
      "\n\003ops\030\001 \003(\01322.com.github.jtendermint.jab" +
      "ci.proto.merkle.ProofOpB\002P\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_github_jtendermint_jabci_proto_merkle_ProofOp_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_github_jtendermint_jabci_proto_merkle_ProofOp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_proto_merkle_ProofOp_descriptor,
        new java.lang.String[] { "Type", "Key", "Data", });
    internal_static_com_github_jtendermint_jabci_proto_merkle_Proof_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_github_jtendermint_jabci_proto_merkle_Proof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_proto_merkle_Proof_descriptor,
        new java.lang.String[] { "Ops", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
